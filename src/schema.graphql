type AddPlanResponse {
  ok: Boolean!
  error: String
}

input detailPlan {
  planName: String
  startTime: String
  endTime: String
  allDay: Boolean
}

input user {
  userId: Int
}

type Mutation {
  AddPlan(thumbnail: String!, title: String, content: String, text: String, image: String, detailPlans: [detailPlan], user: user): AddPlanResponse!
  SignUp(nickName: String!, password: String!, avatar: String!): SignUpResponse
}

type GetPlanResponse {
  ok: Boolean!
  error: String
  plan: Plan
}

type Query {
  GetPlan(planId: Int!): GetPlanResponse!
  GetPlans: GetPlansResponse!
  SignIn(nickName: String!, password: String!): SignInResponse
}

type GetPlansResponse {
  ok: Boolean!
  error: String
  plan: [Plan]
}

type DetailPlan {
  detailPlanId: Int
  planName: String
  startTime: String
  endTime: String
  allDay: Boolean
}

type Plan {
  planId: Int
  thumbnail: String
  title: String
  content: String
  text: String
  image: String
  createdAt: String
  updatedAt: String
  detailPlans: [DetailPlan]
  user: User
}

type User {
  userId: Int
  plans: [Plan]
  nickName: String
  password: String
  avatar: String
  createdAt: String
  updatedAt: String
}

type SignInResponse {
  ok: Boolean!
  error: String
  token: String
}

type SignUpResponse {
  ok: Boolean!
  error: String
  user: User
}
